Please Read The Chapters on: 
Containers, Blocks, and Iterators 
Sharing Functionality: Inheritance, Modules, and Mixins

1. What is the difference between a Hash and an Array?
An array is a collection of object references, indexed
by integers. A hash is also a collection of object references,
but its elements can be indexed with objects of any type, e.g., 
symbols, strings, regular expressions, etc. 

2. When would you use an Array over a Hash and vice versa?
An array is useful for breaking objects down into simple elements of a list, whereas
a hash would be more advantageous for parsing through that list and indexing the 
elements by the number of times they appear.
In the example where one would be looking to calculate the word frequency 
in a given block of text, an array would be advantageous to split the strings
in the text into individual word elements in an array. The hash object would 
be created to index by the words in the array.

3. What is a module? Enumerable is a built in Ruby module, what is it?
Modules are a way of grouping together methods, classes, and constants. Modules
provide a namespace and prevent name clashes, as well as suppoprting the mixin facility. 
Enumerable is a module that supports  operations such as mapping, sorting, searching, 
and ordering elements.

4. Can you inherit more than one thing in Ruby? How could you get around this problem?
No. Ruby classes have only one direct parent. This can be avoided by including
a "mixin" (a partial class difinition), thereby introducing multiple-inheritance-like
capability.

5. What is the difference between a Module and a Class?
Modules cannot have instances. 
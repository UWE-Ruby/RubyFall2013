Please Read The Chapters on: 
Containers, Blocks, and Iterators 
Sharing Functionality: Inheritance, Modules, and Mixins

1. What is the difference between a Hash and an Array?
An array is a collection of objects that are indexed by their order in memory and will therefore be returned in a predictable order
A hash is a collection of objects indexed by an arbitrary hash key. Items may be returned in an unpredictable order

2. When would you use an Array over a Hash and vice versa?
An array is ideal for creating a push/pop stack and anytime an integer indexed key makes logical sense.
Arrays are also generally more memory efficient than hashes, so anytime memory limitations are a concern.
Otherwise, hashes are generally more flexible and lookup speeds are generally faster.

3. What is a module? Enumerable is a built in Ruby module, what is it?
Modules act as libraries and are a way to create methods/functions that will be used in multiple classes.


4. Can you inherit more than one thing in Ruby? How could you get around this problem?
No, Ruby does not have multiple inheritance.
To get around the problem 'include' can be used to mixin multiple modules into a single class.

5. What is the difference between a Module and a Class?
Generally, a module is about methods and a class is about objects...
Objects can be instances of a class, modules cannot be instantiated.
Class can inherit from other classes but cannot be 'included' in a class.
Modules have no pure inheritance, but can be 'included' in other classes and modules (using include)